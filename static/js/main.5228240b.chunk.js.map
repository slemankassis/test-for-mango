{"version":3,"sources":["exercises/services/api.ts","exercises/store/exercise1/slice.ts","exercises/store/exercise2/slice.ts","store/root-reducer.ts","store/store.ts","components/HiddenInput/HiddenInput.tsx","components/Range/Range.tsx","misc/helpers.ts","components/AlertMessage/AlertMessage.tsx","exercises/store/exercise1/selectors.ts","components/Exercise1.tsx","misc/constants.ts","exercises/store/exercise2/selectors.ts","components/Exercise2.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MockableApi","api","this","Axios","create","baseURL","get","exercise1Slice","createSlice","name","initialState","isLoading","reducers","loadExercise1OptionsStart","state","loadExercise1OptionsSuccess","payload","options","error","undefined","loadExercise1OptionsFailure","actions","exercise2Slice","loadExercise2OptionsStart","loadExercise2OptionsSuccess","loadExercise2OptionsFailure","rootReducer","combineReducers","exercise1","exercise2","store","configureStore","reducer","RangeControls","HiddenInputContainer","styled","div","HiddenInput","value","unit","onChange","disabled","ariaLabel","useState","toString","internalValue","setInternalValue","useEffect","handleOnChange","ev","target","isNaN","valueAsNumber","className","type","aria-label","onBlur","style","width","length","generatePercentages","arr","sortedArr","sort","a","b","mul","map","percent","closestRangeValueByPercentage","percentage","rangeValues","reduce","prev","curr","Math","abs","closestRangeValueByValue","AlertMessageType","RangeStyles","RangeControl","Range","rangeBarRef","useRef","inputEditable","limitMin","limitMax","released","minPos","maxPos","minVal","maxVal","lastActiveControl","rangeState","setRangeState","newOptions","Array","isArray","max","min","Error","steps","i","oldRangeState","onStartMoving","el","onMoving","current","leftSpace","offsetLeft","percentajeReal","clientWidth","nativeEvent","TouchEvent","touches","clientX","MouseEvent","percentaje","MIN","minValue","MAX","maxValue","onStopMoving","emitValue","listener","window","addEventListener","removeEventListener","useEvent","val","onMouseMove","onTouchMove","onTouchEnd","onTouchCancel","newValue","newRangeValue","ref","onMouseDown","onTouchStart","zIndex","left","useStyles","makeStyles","alert","color","padding","backgroundColor","boxShadow","info","AlertMessage","children","classes","classnames","getExercise1State","Exercise1","rangeSelected","setRangeSelected","dispatch","useDispatch","exercise1State","useSelector","MokableApi","getExercise1Options","then","response","data","catch","err","message","getExercise2State","Exercise2","exercise2State","getExercise2Options","process","exact","basename","path","to","pathname","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5228240b.chunk.js","sourcesContent":["import Axios, { AxiosInstance } from 'axios';\nimport { MinAndMax } from '../../models/MinAndMax';\nimport { Exercise2Values } from '../../models/Exercise2Response';\n\nclass MockableService {\n  api: AxiosInstance;\n\n  constructor() {\n    this.api = Axios.create({\n      baseURL: 'http://demo8192803.mockable.io/',\n    });\n  }\n\n  getExercise1Options() {\n    return this.api.get<MinAndMax>('/exercise1');\n  }\n\n  getExercise2Options() {\n    return this.api.get<Exercise2Values>('/exercise2');\n  }\n}\n\nconst MockableApi = () => {\n  return new MockableService();\n};\n\nexport default MockableApi();\n","import { AnyAction, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UNKNOWN_ERROR } from '../../../misc/constants';\nimport { MinAndMax } from '../../../models/MinAndMax';\nimport { AppThunk } from '../../../store/store';\nimport MokableApi from '../../services/api';\n\nexport interface ReposState {\n  options?: MinAndMax;\n  isLoading: boolean;\n  error?: string;\n}\n\nconst initialState: ReposState = {\n  isLoading: false,\n};\n\nconst exercise1Slice = createSlice({\n  name: 'exercise1',\n  initialState,\n  reducers: {\n    loadExercise1OptionsStart(state) {\n      state.isLoading = true;\n    },\n    loadExercise1OptionsSuccess(\n      state,\n      { payload }: PayloadAction<{ options: MinAndMax }>,\n    ) {\n      state.isLoading = false;\n      state.options = payload.options;\n      state.error = undefined;\n    },\n    loadExercise1OptionsFailure(\n      state,\n      { payload }: PayloadAction<{ error: string }>,\n    ) {\n      state.isLoading = false;\n      state.error = payload.error;\n    },\n  },\n});\n\nexport default exercise1Slice.reducer;\n\nexport const {\n  loadExercise1OptionsStart,\n  loadExercise1OptionsSuccess,\n  loadExercise1OptionsFailure,\n} = exercise1Slice.actions;\n\nexport const loadExercise1Options =\n  (): AppThunk<Promise<AnyAction>> => (dispatch) => {\n    dispatch(loadExercise1OptionsStart());\n\n    return MokableApi.getExercise1Options()\n      .then((response) => {\n        return dispatch(\n          loadExercise1OptionsSuccess({\n            options: response.data,\n          }),\n        );\n      })\n      .catch((err) => {\n        return dispatch(\n          loadExercise1OptionsFailure({\n            error: err.message || UNKNOWN_ERROR,\n          }),\n        );\n      });\n  };\n","import { AnyAction, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UNKNOWN_ERROR } from '../../../misc/constants';\nimport { AppThunk } from '../../../store/store';\nimport MokableApi from '../../services/api';\n\nexport interface ReposState {\n  options?: number[];\n  isLoading: boolean;\n  error?: string;\n}\n\nconst initialState: ReposState = {\n  isLoading: false,\n};\n\nconst exercise2Slice = createSlice({\n  name: 'exercise2',\n  initialState,\n  reducers: {\n    loadExercise2OptionsStart(state) {\n      state.isLoading = true;\n    },\n    loadExercise2OptionsSuccess(\n      state,\n      { payload }: PayloadAction<{ options: number[] }>,\n    ) {\n      state.isLoading = false;\n      state.options = payload.options;\n      state.error = undefined;\n    },\n    loadExercise2OptionsFailure(\n      state,\n      { payload }: PayloadAction<{ error: string }>,\n    ) {\n      state.isLoading = false;\n      state.error = payload.error;\n    },\n  },\n});\n\nexport default exercise2Slice.reducer;\n\nexport const {\n  loadExercise2OptionsStart,\n  loadExercise2OptionsSuccess,\n  loadExercise2OptionsFailure,\n} = exercise2Slice.actions;\n\nexport const loadExercise2Options =\n  (): AppThunk<Promise<AnyAction>> => (dispatch) => {\n    dispatch(loadExercise2OptionsStart());\n\n    return MokableApi.getExercise2Options()\n      .then((response) => {\n        return dispatch(\n          loadExercise2OptionsSuccess({\n            options: response.data.rangeValues,\n          }),\n        );\n      })\n      .catch((err) => {\n        return dispatch(\n          loadExercise2OptionsFailure({\n            error: err.message || UNKNOWN_ERROR,\n          }),\n        );\n      });\n  };\n","import { combineReducers } from '@reduxjs/toolkit';\nimport exercise1 from '../exercises/store/exercise1/slice';\nimport exercise2 from '../exercises/store/exercise2/slice';\n\nconst rootReducer = combineReducers({\n  exercise1,\n  exercise2,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { Action, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport rootReducer, { RootState } from './root-reducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type storeType = typeof store;\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./root-reducer', () => {\n    const newRootReducer = require('./root-reducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import React, { FC, FocusEvent, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst HiddenInputContainer = styled.div`\n  .span-input {\n    border: none;\n    display: inline;\n    font-family: inherit;\n    font-size: inherit;\n    padding: 0;\n    width: 100%;\n    min-width: 1.5ch;\n    transition: width 0.5s;\n\n    & {\n      -moz-appearance: textfield;\n    }\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    &:disabled {\n      color: inherit;\n    }\n\n    &:focus {\n      border: none;\n      outline: none;\n    }\n  }\n`;\n\nexport interface HiddenInputProps {\n  value: number;\n  unit?: string;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n  ariaLabel?: string;\n}\n\nconst HiddenInput: FC<HiddenInputProps> = ({\n  value,\n  unit,\n  onChange,\n  disabled,\n  ariaLabel,\n}) => {\n  const [internalValue, setInternalValue] = useState(value.toString());\n\n  useEffect(() => {\n    setInternalValue(value.toString());\n  }, [value]);\n\n  const handleOnChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setInternalValue(ev.target.value);\n\n    if (!isNaN(ev.target.valueAsNumber)) {\n      if (onChange) {\n        onChange(ev);\n      }\n    }\n  };\n\n  const handleOnBlur = (ev: React.FocusEvent<HTMLInputElement>) => {\n    setInternalValue(value.toString());\n  };\n\n  return (\n    <HiddenInputContainer>\n      <input\n        className=\"span-input\"\n        type=\"number\"\n        value={internalValue}\n        aria-label={ariaLabel}\n        onChange={(ev) => handleOnChange(ev)}\n        onBlur={(ev) => handleOnBlur(ev)}\n        style={{\n          width: `${internalValue.toString().length}ch`,\n        }}\n        disabled={disabled}\n      ></input>\n      <span>{unit}</span>\n    </HiddenInputContainer>\n  );\n};\n\nexport default HiddenInput;\n","import React, { FC, useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport HiddenInput from '../HiddenInput/HiddenInput';\n\nimport { generatePercentages } from '../../misc/helpers';\nimport { RangeValue } from '../../models/RangeValue';\nimport { MinAndMax } from '../../models/MinAndMax';\nimport {\n  closestRangeValueByPercentage,\n  closestRangeValueByValue,\n} from '../../misc/helpers';\n\nenum RangeControls {\n  MIN,\n  MAX,\n}\n\nfunction useEvent<K extends keyof WindowEventMap>(\n  type: K,\n  listener: (this: Window, ev: WindowEventMap[K]) => any,\n  options: boolean | AddEventListenerOptions = false,\n): void {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n\n    return function cleanup() {\n      window.removeEventListener(type, listener);\n    };\n  });\n}\n\nconst RangeStyles = styled.div`\n  .range {\n    display: flex;\n    user-select: none;\n    padding: 1em 0;\n\n    &.m-disabled {\n      position: relative;\n      opacity: 0.6;\n\n      &::before {\n        content: '';\n        position: absolute;\n        z-index: 2;\n        cursor: not-allowed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      }\n\n      & > * {\n        pointer-events: none;\n      }\n    }\n\n    &__boundaries {\n      max-width: 100%;\n    }\n\n    &__bar {\n      flex-grow: 1;\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      margin: 0 1em;\n      min-width: 100px;\n\n      &__control {\n        position: absolute;\n      }\n\n      &__rail {\n        border-radius: 5px;\n        height: 5px;\n        background-color: #000;\n      }\n    }\n  }\n`;\n\nconst RangeControl = styled.div`\n  cursor: grab;\n  width: 1.25em;\n  height: 1.25em;\n  border-radius: 100%;\n  background-color: #000;\n  transform: translate(-50%, 0);\n  transition: width 0.25s, height 0.25s;\n  touch-action: none;\n\n  &:hover {\n    width: 2.25em;\n    height: 2.25em;\n  }\n\n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nexport interface RangeProps {\n  options?: number[] | MinAndMax;\n  value?: MinAndMax;\n  onChange?: (e: MinAndMax) => void;\n  unit?: string;\n  disabled?: boolean;\n}\n\ninterface RangeState {\n  /** Tells if user can edit max and min inputs */\n  inputEditable: boolean;\n  limitMin: number;\n  limitMax: number;\n  options: RangeValue[];\n  released: boolean;\n  minPos: number;\n  maxPos: number;\n  disabled: boolean;\n  minVal: number;\n  maxVal: number;\n  lastActiveControl?: RangeControls;\n}\n\nconst Range: FC<RangeProps> = ({ options, value, onChange, unit, disabled }) => {\n  const rangeBarRef = useRef<HTMLDivElement>(null);\n\n  const [rangeState, setRangeState] = useState<RangeState>({\n    inputEditable: true,\n    limitMin: 0,\n    limitMax: 0,\n    options: [],\n    released: true,\n    minPos: 0,\n    maxPos: 100,\n    disabled: false,\n    minVal: 0,\n    maxVal: 0,\n    lastActiveControl: undefined,\n  });\n\n  useEffect(() => {\n    let newOptions: RangeValue[];\n    let inputEditable = false;\n\n    if (!options) {\n      setRangeState((oldRangeState) => {\n        return {\n          ...oldRangeState,\n          disabled: true,\n          inputEditable: false,\n        };\n      });\n      return;\n    }\n\n    if (Array.isArray(options)) {\n      inputEditable = false;\n      newOptions = generatePercentages(options);\n    } else if (options && !isNaN(options?.max) && !isNaN(options?.min)) {\n      // Validate that in fact `min` is minor than `max`\n      const min = Math.min(options.min, options.max);\n      const max = Math.max(options.min, options.max);\n      let steps: number[] = [];\n\n      for (let i = min; i <= max; i++) {\n        steps = [...steps, i];\n      }\n\n      inputEditable = true;\n      newOptions = generatePercentages(steps);\n    } else {\n      throw new Error('options must be number[] or {min: number, max: number}');\n    }\n\n    if (newOptions) {\n      const limitMin = newOptions[0]?.value;\n      const limitMax = newOptions[newOptions.length - 1]?.value;\n      const minVal = value?.min ?? limitMin;\n      const maxVal = value?.max ?? limitMax;\n\n      setRangeState((oldRangeState) => {\n        return {\n          ...oldRangeState,\n          limitMin,\n          limitMax,\n          minVal,\n          maxVal,\n          maxPos: closestRangeValueByValue(maxVal, newOptions).percent,\n          minPos: closestRangeValueByValue(minVal, newOptions).percent,\n          inputEditable,\n          options: newOptions,\n          disabled: !!disabled,\n        };\n      });\n    }\n  }, [options, value, disabled]);\n\n  const onStartMoving = (el: RangeControls) => {\n    setRangeState((oldRangeState) => {\n      return {\n        ...oldRangeState,\n        released: false,\n        lastActiveControl: el,\n      };\n    });\n  };\n\n  const onMoving = (\n    ev:\n      | React.MouseEvent<HTMLDivElement, globalThis.MouseEvent>\n      | React.TouchEvent<HTMLDivElement>,\n  ) => {\n    if (!rangeState.released) {\n      if (rangeBarRef.current) {\n        const leftSpace = rangeBarRef.current.offsetLeft;\n        const rangeWidth = rangeBarRef.current.clientWidth;\n        const clientX: number =\n          ev.nativeEvent instanceof TouchEvent\n            ? (ev as any).touches[0].clientX\n            : ev.nativeEvent instanceof MouseEvent\n            ? (ev as any).clientX\n            : 0;\n\n        const percentajeReal = 100 / (rangeWidth / (clientX - leftSpace));\n        let percentaje = percentajeReal;\n        if (percentajeReal > 100) {\n          percentaje = 100;\n        } else if (percentajeReal < 0) {\n          percentaje = 0;\n        }\n\n        if (rangeState.lastActiveControl === RangeControls.MIN) {\n          if (percentaje > rangeState.maxPos) {\n            percentaje = rangeState.maxPos;\n          }\n\n          const minValue = closestRangeValueByPercentage(\n            percentaje,\n            rangeState.options,\n          );\n\n          setRangeState((oldRangeState) => {\n            return {\n              ...oldRangeState,\n              minPos: percentaje,\n              lastActiveControl: RangeControls.MIN,\n              minVal: minValue.value,\n            };\n          });\n        } else if (rangeState.lastActiveControl === RangeControls.MAX) {\n          if (percentaje < rangeState.minPos) {\n            percentaje = rangeState.minPos;\n          }\n\n          const maxValue = closestRangeValueByPercentage(\n            percentaje,\n            rangeState.options,\n          );\n\n          setRangeState((oldRangeState) => {\n            return {\n              ...oldRangeState,\n              maxPos: percentaje,\n              lastActiveControl: RangeControls.MAX,\n              maxVal: maxValue.value,\n            };\n          });\n        }\n      }\n    }\n  };\n\n  const onStopMoving = () => {\n    if (!rangeState.released) {\n      const minValue = closestRangeValueByPercentage(\n        rangeState.minPos,\n        rangeState.options,\n      );\n      const maxValue = closestRangeValueByPercentage(\n        rangeState.maxPos,\n        rangeState.options,\n      );\n\n      setRangeState((oldRangeState) => {\n        return {\n          ...oldRangeState,\n          released: true,\n          minPos: minValue.percent,\n          maxPos: maxValue.percent,\n          minVal: minValue.value,\n          maxVal: maxValue.value,\n        };\n      });\n\n      emitValue({\n        min: minValue.value,\n        max: maxValue.value,\n      });\n    }\n  };\n\n  useEvent('mouseup', onStopMoving);\n\n  const emitValue = (val: MinAndMax) => {\n    if (onChange) {\n      onChange(val);\n    }\n  };\n\n  const handleTextInputMin = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    let newValue = ev.target.valueAsNumber;\n\n    if (newValue > rangeState.maxVal) {\n      newValue = rangeState.maxVal;\n    }\n\n    const newRangeValue = closestRangeValueByValue(newValue, rangeState.options);\n\n    setRangeState((oldRangeState) => {\n      return {\n        ...oldRangeState,\n        minPos: newRangeValue.percent,\n        minVal: newRangeValue.value,\n        lastActiveControl: RangeControls.MIN,\n      };\n    });\n\n    emitValue({\n      max: rangeState.maxVal,\n      min: newRangeValue.value,\n    });\n  };\n\n  const handleTextInputMax = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    let newValue = ev.target.valueAsNumber;\n\n    if (newValue < rangeState.minVal) {\n      newValue = rangeState.minVal;\n    }\n\n    const newRangeValue = closestRangeValueByValue(newValue, rangeState.options);\n\n    setRangeState((oldRangeState) => {\n      return {\n        ...oldRangeState,\n        maxPos: newRangeValue.percent,\n        maxVal: newRangeValue.value,\n        lastActiveControl: RangeControls.MAX,\n      };\n    });\n\n    emitValue({\n      max: newRangeValue.value,\n      min: rangeState.minVal,\n    });\n  };\n\n  return (\n    <RangeStyles>\n      <div\n        className={`range ${rangeState.disabled ? 'm-disabled' : ''}`}\n        onMouseMove={(ev) => {\n          onMoving(ev);\n        }}\n        onTouchMove={(ev) => {\n          onMoving(ev);\n        }}\n        onTouchEnd={onStopMoving}\n        onTouchCancel={onStopMoving}\n        aria-label=\"range-selector\"\n      >\n        <HiddenInput\n          value={rangeState.minVal}\n          onChange={handleTextInputMin}\n          unit={unit}\n          disabled={!rangeState.inputEditable || disabled}\n          ariaLabel=\"range input min\"\n        />\n        <div className=\"range__bar\" ref={rangeBarRef}>\n          <RangeControl\n            aria-label=\"range control min\"\n            onMouseDown={() => {\n              onStartMoving(RangeControls.MIN);\n            }}\n            onTouchStart={() => {\n              onStartMoving(RangeControls.MIN);\n            }}\n            className=\"range__bar__control m-min\"\n            style={{\n              zIndex: rangeState.lastActiveControl === RangeControls.MIN ? 1 : 0,\n              left: `${rangeState.minPos}%`,\n            }}\n          />\n\n          <RangeControl\n            aria-label=\"range control max\"\n            onMouseDown={() => {\n              onStartMoving(RangeControls.MAX);\n            }}\n            onTouchStart={() => {\n              onStartMoving(RangeControls.MAX);\n            }}\n            className=\"range__bar__control m-max\"\n            style={{\n              zIndex: rangeState.lastActiveControl === RangeControls.MAX ? 1 : 0,\n              left: `${rangeState.maxPos}%`,\n            }}\n          />\n\n          <div className=\"range__bar__rail\"></div>\n        </div>\n\n        <HiddenInput\n          value={rangeState.maxVal}\n          onChange={handleTextInputMax}\n          unit={unit}\n          disabled={!rangeState.inputEditable || disabled}\n          ariaLabel=\"range input max\"\n        />\n      </div>\n    </RangeStyles>\n  );\n};\n\nexport default Range;\n","import { RangeValue } from '../models/RangeValue';\n\nexport function generatePercentages(arr: number[]): RangeValue[] {\n  const sortedArr = [...arr].sort((a, b) => a - b);\n\n  const mul = 100 / (sortedArr[sortedArr.length - 1] - sortedArr[0]);\n  return sortedArr.map((value) => {\n    return {\n      value,\n      percent: (value - sortedArr[0]) * mul,\n    };\n  });\n}\n\nexport function closestRangeValueByPercentage(\n  percentage: number,\n  rangeValues: RangeValue[],\n): RangeValue {\n  return rangeValues.reduce((prev, curr) => {\n    return Math.abs(curr.percent - percentage) < Math.abs(prev.percent - percentage)\n      ? curr\n      : prev;\n  });\n}\n\nexport function closestRangeValueByValue(\n  value: number,\n  rangeValues: RangeValue[],\n): RangeValue {\n  return rangeValues.reduce((prev, curr) => {\n    return Math.abs(curr.value - value) < Math.abs(prev.value - value) ? curr : prev;\n  });\n}\n","import React, { FC } from 'react';\nimport classnames from 'classnames';\nimport { makeStyles } from '@mui/styles';\n\n// Version with Material UI instead of styled-components\nconst useStyles = makeStyles({\n  alert: { color: '#fff', padding: '0.5em 0.5em 0.3em' },\n  error: { backgroundColor: '#ff4444', boxShadow: '0 8px #cc0000' },\n  info: {\n    backgroundColor: '#33b5e5',\n    boxShadow: '0 8px #0099cc',\n  },\n});\n\nenum AlertMessageType {\n  error = 'm-error',\n  info = 'm-info',\n}\n\nexport interface AlertMessageProps {\n  type: keyof typeof AlertMessageType;\n}\n\nconst AlertMessage: FC<AlertMessageProps> = ({ children, type }) => {\n  const classes = useStyles();\n\n  if (children) {\n    return <div className={classnames(alert, classes[type])}>{children}</div>;\n  } else {\n    return null;\n  }\n};\n\nexport default AlertMessage;\n","import { RootState } from '../../../store/root-reducer';\n\nexport const getExercise1State = (state: RootState) => ({\n  options: state.exercise1.options,\n  isLoading: state.exercise1.isLoading,\n  error: state.exercise1.error,\n});\n","import React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Range from '../components/Range/Range';\nimport AlertMessage from '../components/AlertMessage/AlertMessage';\nimport { getExercise1State } from '../exercises/store/exercise1/selectors';\nimport { loadExercise1Options } from '../exercises/store/exercise1/slice';\nimport { CURRENCY_SYMBOL } from '../misc/constants';\n\nconst Exercise1: FC = () => {\n  const [rangeSelected, setRangeSelected] = useState<{\n    min: number;\n    max: number;\n  }>();\n\n  const onChangeHandler = (ev: { min: number; max: number }) => {\n    setRangeSelected(ev);\n  };\n\n  const dispatch = useDispatch();\n\n  const exercise1State = useSelector(getExercise1State);\n\n  useEffect(() => {\n    dispatch(loadExercise1Options());\n  }, [dispatch]);\n\n  return (\n    <div className=\"exercise1\">\n      <span>Exercise 1</span>\n      <Range\n        options={exercise1State.options}\n        value={rangeSelected}\n        onChange={onChangeHandler}\n        unit={CURRENCY_SYMBOL}\n      />\n\n      <AlertMessage type=\"error\">{exercise1State.error}</AlertMessage>\n      <AlertMessage type=\"info\">\n        {exercise1State.isLoading ? 'Loading...' : null}\n      </AlertMessage>\n\n      {rangeSelected !== undefined && (\n        <p>\n          Selected values: {rangeSelected?.min} - {rangeSelected?.max}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Exercise1;\n","export const CURRENCY_SYMBOL = '€';\nexport const UNKNOWN_ERROR = 'Unknown error';\n","import { RootState } from '../../../store/root-reducer';\n\nexport const getExercise2State = (state: RootState) => ({\n  options: state.exercise2.options,\n  isLoading: state.exercise2.isLoading,\n  error: state.exercise2.error,\n});\n","import React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { MinAndMax } from '../models/MinAndMax';\nimport { CURRENCY_SYMBOL } from '../misc/constants';\nimport AlertMessage from '../components/AlertMessage/AlertMessage';\nimport Range from '../components/Range/Range';\nimport { getExercise2State } from '../exercises/store/exercise2/selectors';\nimport { loadExercise2Options } from '../exercises/store/exercise2/slice';\n\nconst Exercise2: FC = () => {\n  const [rangeSelected, setRangeSelected] = useState<{\n    min: number;\n    max: number;\n  }>();\n\n  const onChangeHandler = (ev: MinAndMax) => {\n    setRangeSelected(ev);\n  };\n\n  const dispatch = useDispatch();\n\n  const exercise2State = useSelector(getExercise2State);\n\n  useEffect(() => {\n    dispatch(loadExercise2Options());\n  }, [dispatch]);\n\n  return (\n    <div className=\"exercise2\">\n      <span>Exercise 2</span>\n      <AlertMessage type=\"error\">{exercise2State.error}</AlertMessage>\n      <AlertMessage type=\"info\">\n        {exercise2State.isLoading ? 'Loading...' : null}\n      </AlertMessage>\n      <Range\n        options={exercise2State.options}\n        value={rangeSelected}\n        onChange={onChangeHandler}\n        unit={CURRENCY_SYMBOL}\n      />\n\n      {rangeSelected !== undefined && (\n        <p>\n          Selected values: {rangeSelected?.min} - {rangeSelected?.max}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Exercise2;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { hot } from 'react-hot-loader';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\nimport Exercise1 from './components/Exercise1';\nimport Exercise2 from './components/Exercise2';\n\nfunction App() {\n  // TODO: Github pages always shows 404. Fix it.\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact basename={`/${process.env.PUBLIC_URL}`} path=\"/\">\n            <Redirect\n              to={{\n                pathname: '/exercise1',\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/exercise1\" component={Exercise1} />\n          <Route exact path=\"/exercise2\" component={Exercise2} />\n          <Route path=\"*\" component={() => <span>404</span>} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default process.env.NODE_ENV === 'development' ? hot(module)(App) : App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}